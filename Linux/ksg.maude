*** The original module KSg was written by Ozan Kahramanogullari 
*** [http://ozan-k.com/], it was adapted for
*** use with the open deduction proof editor by Joe Lynch.

fmod KSg-Signature is

  sorts Atom Unit Structure OuterStructure .
  subsort Atom < Structure .
  subsort Unit < Structure .

  op tt    : -> Unit .
  op ff    : -> Unit .
  op -_    : Atom -> Atom [ prec 50 ] .
  op [_,_] : Structure Structure -> Structure [assoc comm id: ff] .
  op {_,_} : Structure Structure -> Structure [assoc comm id: tt] .

  ops a b c d e f g h i j a1 a2 a3 a4 b1 b2 b3 b4 c1 c2 c3 c4 d1 d2 d3 d4 e1 e2 e3 e4 f1 f2 f3 f4 g1 g2 g3 g4 h1 h2 h3 h4 phi1 phi2 phi3 phi3 phi4 phi5 : -> Atom . 

endfm

mod KSg-Inf is

  protecting KSg-Signature .

  ***var atm : Atom .
  ***var R T U  : Structure .
  
  var atm : Atom .
  var R A B C D : Structure .

  rl  [i_down]  : [ atm , - atm ]                =>   tt .
  rl  [s]       : [ { A , C } , B ]        =>   { [ A , B ] , C } .
  rl  [m]       : { [ A , C ] , [ B , D ] }  =>   [ { A , B } , { C , D } ] .
  rl  [c_down]  : R                         =>   [ R , R ] .
  rl  [c_up]    : { A , A }                =>   A .
  rl  [w_down]  : R                          =>   ff .

  ***(
  rl  [i-down]  : [ atm , - atm ]           =>   tt .
  rl  [s]       : [ { R , T } , U ]       =>   { [ R , U ] , T } .
  rl  [w-down]  : R                       =>   ff .
  rl  [c-down]  : atm                     =>   [ atm , atm ] .
  rl  [c-up]    : { atm, atm }              =>   atm .
  rl  [tt-dis]  : [ tt , tt ]             =>   tt .
  rl  [ff-con]  : { ff, ff }            =>   ff .
  rl  [tt-elim] : { atm , tt }              =>   atm .
  )

endm

mod KSg-Inf-Reverse is
 
  protecting KSg-Signature .

  var A : Atom .
  var R T U  : Structure .
  var atm : Atom .

  rl  [i-up-r]    : { atm , - atm }      =>   ff .
  rl  [s-r]       : { [ R , U ] , T }    =>   [ { R , T } , U ] .
  rl  [w-up-r]    : R                    =>   tt .
  rl  [c-down-r]  : [ R , R ]            =>    R .
  rl  [c-up-r]    : R                =>   { R , R } .

endm

mod KSg-Meta is

  protecting KSg-Inf .
  protecting Util .
  subsort Structure < Derivation .

endm

mod KSg-Meta-Reverse is

  protecting KSg-Inf-Reverse .
  protecting Util .
  subsort Structure < Derivation .

endm

fmod EQQ is
 protecting KSg-Signature .
 protecting BOOL .
 vars A B : Structure .
 op equality : Structure Structure -> Bool .
 eq equality ( A , B ) = if A == B then true else false fi .
endfm

