'_>`[_`]>_['`{_`,_`}['___['`[_`,_`]['e.Atom,'g.Atom],'a.Atom,'`[_`,_`]['f.Atom,'h.Atom]],'___['`[_`,_`]['e.Atom,'g.Atom],'a.Atom,'`[_`,_`]['f.Atom,'h.Atom]]],''acc.Sort,'___['`{_`,_`}['`[_`,_`]['e.Atom,'g.Atom],'`[_`,_`]['e.Atom,'g.Atom]],'a.Atom,'`{_`,_`}['`[_`,_`]['f.Atom,'h.Atom],'`[_`,_`]['f.Atom,'h.Atom]]]]
	
	
'_>`[_`]>_['`{_`,_`}['___['`[_`,_`]['e.Atom,'g.Atom],'a.Atom,'`[_`,_`]['f.Atom,'h.Atom]],'___['`[_`,_`]['e.Atom,'g.Atom],'a.Atom,'`[_`,_`]['f.Atom,'h.Atom]]],''acc.Sort,'_>`[_`]>_['___['`{_`,_`}['`[_`,_`]['e.Atom,'g.Atom],'`[_`,_`]['e.Atom,'g.Atom]],'a.Atom,'`{_`,_`}['`[_`,_`]['f.Atom,'h.Atom],'`[_`,_`]['f.Atom,'h.Atom]]], ''c-down.Sort,'___['`[_`,_`]['`{_`,_`}['`[_`,_`]['e.Atom,'g.Atom],'`[_`,_`]['e.Atom,'g.Atom]],'`{_`,_`}['`[_`,_`]['e.Atom,'g.Atom],'`[_`,_`]['e.Atom,'g.Atom]]],'a.Atom,'`{_`,_`}[ '`[_`,_`]['f.Atom,'h.Atom],'`[_`,_`]['f.Atom,'h.Atom]]]]]
	
	
'_>`[_`]>_['`{_`,_`}['___['`[_`,_`]['e.Atom,'g.Atom],'a.Atom,'`[_`,_`]['f.Atom,'h.Atom]],'___['`[_`,_`]['e.Atom,'g.Atom],'a.Atom,  '`[_`,_`]['f.Atom,'h.Atom]]],''acc.Sort,'_>`[_`]>_['___['`{_`,_`}['`[_`,_`]['e.Atom,'g.Atom],'`[_`,_`]['e.Atom,'g.Atom]],'a.Atom,'`{_`,_`}['`[_`,_`]['f.Atom,'h.Atom],'`[_`,_`]['f.Atom, 'h.Atom]]],''c-up.Sort,'___['`[_`,_`]['e.Atom,'g.Atom],'a.Atom,'`{_`,_`}['`[_`,_`]['f.Atom,'h.Atom],'`[_`,_`]['f.Atom,'h.Atom]]]]]
	
	
,'_>`[_`]>_['`{_`,_`}['___['`[_`,_`]['e.Atom,'g.Atom], 'a.Atom,'`[_`,_`]['f.Atom,'h.Atom]],'___['`[_`,_`]['e.Atom,'g.Atom],'a.Atom,'`[_`,_`]['f.Atom,'h.Atom]]],''acc.Sort,'_>`[_`]>_['___['`{_`,_`}['`[_`,_`]['e.Atom,'g.Atom],'`[_`,_`]['e.Atom,   'g.Atom]],'a.Atom,'`{_`,_`}['`[_`,_`]['f.Atom,'h.Atom],'`[_`,_`]['f.Atom,'h.Atom]]],''m.Sort,'___['`[_`,_`]['`{_`,_`}['e.Atom,'e.Atom],'`{_`,_`}['g.Atom,'g.Atom]],'a.Atom,'`{_`,_`}[   '`[_`,_`]['f.Atom,'h.Atom],'`[_`,_`]['f.Atom,'h.Atom]]]]]
	
	
,'_>`[_`]>_['`{_`,_`}['___['`[_`,_`]['e.Atom,'g.Atom],'a.Atom,'`[_`,_`]['f.Atom,'h.Atom]],'___['`[_`,_`]['e.Atom,'g.Atom],'a.Atom,
    '`[_`,_`]['f.Atom,'h.Atom]]],''acc.Sort,'_>`[_`]>_['___['`{_`,_`}['`[_`,_`]['e.Atom,'g.Atom],'`[_`,_`]['e.Atom,'g.Atom]],'a.Atom,'`{_`,_`}['`[_`,_`]['f.Atom,'h.Atom],'`[_`,_`]['f.Atom,
    'h.Atom]]],''m.Sort,'___['`[_`,_`]['`{_`,_`}['e.Atom,'g.Atom],'`{_`,_`}['e.Atom,'g.Atom]],'a.Atom,'`{_`,_`}['`[_`,_`]['f.Atom,'h.Atom],'`[_`,_`]['f.Atom,'h.Atom]]]]]
	
	
,'_>`[_`]>_['`{_`,_`}[
    '___['`[_`,_`]['e.Atom,'g.Atom],'a.Atom,'`[_`,_`]['f.Atom,'h.Atom]],'___['`[_`,_`]['e.Atom,'g.Atom],'a.Atom,'`[_`,_`]['f.Atom,'h.Atom]]],''acc.Sort,'_>`[_`]>_['___['`{_`,_`}['`[_`,_`][
    'e.Atom,'g.Atom],'`[_`,_`]['e.Atom,'g.Atom]],'a.Atom,'`{_`,_`}['`[_`,_`]['f.Atom,'h.Atom],'`[_`,_`]['f.Atom,'h.Atom]]],''c-down.Sort,'___['`{_`,_`}['`[_`,_`]['e.Atom,'g.Atom],'`[_`,_`][
    'e.Atom,'g.Atom]],'a.Atom,'`[_`,_`]['`{_`,_`}['`[_`,_`]['f.Atom,'h.Atom],'`[_`,_`]['f.Atom,'h.Atom]],'`{_`,_`}['`[_`,_`]['f.Atom,'h.Atom],'`[_`,_`]['f.Atom,'h.Atom]]]]]]
	
,'_>`[_`]>_[
    '`{_`,_`}['___['`[_`,_`]['e.Atom,'g.Atom],'a.Atom,'`[_`,_`]['f.Atom,'h.Atom]],'___['`[_`,_`]['e.Atom,'g.Atom],'a.Atom,'`[_`,_`]['f.Atom,'h.Atom]]],''acc.Sort,'_>`[_`]>_['___['`{_`,_`}[
    '`[_`,_`]['e.Atom,'g.Atom],'`[_`,_`]['e.Atom,'g.Atom]],'a.Atom,'`{_`,_`}['`[_`,_`]['f.Atom,'h.Atom],'`[_`,_`]['f.Atom,'h.Atom]]],''c-up.Sort,'___['`{_`,_`}['`[_`,_`]['e.Atom,'g.Atom],
    '`[_`,_`]['e.Atom,'g.Atom]],'a.Atom,'`[_`,_`]['f.Atom,'h.Atom]]]]
	
	
,'_>`[_`]>_['`{_`,_`}['___['`[_`,_`]['e.Atom,'g.Atom],'a.Atom,'`[_`,_`]['f.Atom,'h.Atom]],'___['`[_`,_`]['e.Atom,'g.Atom],
    'a.Atom,'`[_`,_`]['f.Atom,'h.Atom]]],''acc.Sort,'_>`[_`]>_['___['`{_`,_`}['`[_`,_`]['e.Atom,'g.Atom],'`[_`,_`]['e.Atom,'g.Atom]],'a.Atom,'`{_`,_`}['`[_`,_`]['f.Atom,'h.Atom],'`[_`,_`][
    'f.Atom,'h.Atom]]],''m.Sort,'___['`{_`,_`}['`[_`,_`]['e.Atom,'g.Atom],'`[_`,_`]['e.Atom,'g.Atom]],'a.Atom,'`[_`,_`]['`{_`,_`}['f.Atom,'f.Atom],'`{_`,_`}['h.Atom,'h.Atom]]]]]
	
	
,'_>`[_`]>_[
    '`{_`,_`}['___['`[_`,_`]['e.Atom,'g.Atom],'a.Atom,'`[_`,_`]['f.Atom,'h.Atom]],'___['`[_`,_`]['e.Atom,'g.Atom],'a.Atom,'`[_`,_`]['f.Atom,'h.Atom]]],''acc.Sort,'_>`[_`]>_['___['`{_`,_`}[
    '`[_`,_`]['e.Atom,'g.Atom],'`[_`,_`]['e.Atom,'g.Atom]],'a.Atom,'`{_`,_`}['`[_`,_`]['f.Atom,'h.Atom],'`[_`,_`]['f.Atom,'h.Atom]]],''m.Sort,'___['`{_`,_`}['`[_`,_`]['e.Atom,'g.Atom],
    '`[_`,_`]['e.Atom,'g.Atom]],'a.Atom,'`[_`,_`]['`{_`,_`}['f.Atom,'h.Atom],'`{_`,_`}['f.Atom,'h.Atom]]]]]
	
	
,'_>`[_`]>_['`{_`,_`}['___['`[_`,_`]['e.Atom,'g.Atom],'a.Atom,'`[_`,_`]['f.Atom,
    'h.Atom]],'___['`[_`,_`]['e.Atom,'g.Atom],'a.Atom,'`[_`,_`]['f.Atom,'h.Atom]]],''acc.Sort,'_>`[_`]>_['___['`{_`,_`}['`[_`,_`]['e.Atom,'g.Atom],'`[_`,_`]['e.Atom,'g.Atom]],'a.Atom,
    '`{_`,_`}['`[_`,_`]['f.Atom,'h.Atom],'`[_`,_`]['f.Atom,'h.Atom]]],''c-down.Sort,'___['`{_`,_`}['`[_`,_`]['e.Atom,'g.Atom],'`[_`,_`]['e.Atom,'e.Atom,'g.Atom,'g.Atom]],'a.Atom,'`{_`,_`}[
    '`[_`,_`]['f.Atom,'h.Atom],'`[_`,_`]['f.Atom,'h.Atom]]]]]
	
,'_>`[_`]>_['`{_`,_`}['___['`[_`,_`]['e.Atom,'g.Atom],'a.Atom,'`[_`,_`]['f.Atom,'h.Atom]],'___['`[_`,_`]['e.Atom,'g.Atom],'a.Atom,
    '`[_`,_`]['f.Atom,'h.Atom]]],''acc.Sort,'_>`[_`]>_['___['`{_`,_`}['`[_`,_`]['e.Atom,'g.Atom],'`[_`,_`]['e.Atom,'g.Atom]],'a.Atom,'`{_`,_`}['`[_`,_`]['f.Atom,'h.Atom],'`[_`,_`]['f.Atom,
    'h.Atom]]],''c-down.Sort,'___['`{_`,_`}['`[_`,_`]['e.Atom,'g.Atom],'`[_`,_`]['e.Atom,'g.Atom]],'a.Atom,'`{_`,_`}['`[_`,_`]['f.Atom,'h.Atom],'`[_`,_`]['f.Atom,'f.Atom,'h.Atom,'h.Atom]]]]]
	
,'_>`[_`]>_['`{_`,_`}['___['`[_`,_`]['e.Atom,'g.Atom],'a.Atom,'`[_`,_`]['f.Atom,'h.Atom]],'___['`[_`,_`]['e.Atom,'g.Atom],'a.Atom,'`[_`,_`]['f.Atom,'h.Atom]]],''acc.Sort,'_>`[_`]>_['___[
    '`{_`,_`}['`[_`,_`]['e.Atom,'g.Atom],'`[_`,_`]['e.Atom,'g.Atom]],'a.Atom,'`{_`,_`}['`[_`,_`]['f.Atom,'h.Atom],'`[_`,_`]['f.Atom,'h.Atom]]],''c-down.Sort,'___['`{_`,_`}['`[_`,_`]['e.Atom,
    'g.Atom],'`[_`,_`]['e.Atom,'e.Atom,'g.Atom]],'a.Atom,'`{_`,_`}['`[_`,_`]['f.Atom,'h.Atom],'`[_`,_`]['f.Atom,'h.Atom]]]]]
	
	
,'_>`[_`]>_['`{_`,_`}['___['`[_`,_`]['e.Atom,'g.Atom],'a.Atom,
    '`[_`,_`]['f.Atom,'h.Atom]],'___['`[_`,_`]['e.Atom,'g.Atom],'a.Atom,'`[_`,_`]['f.Atom,'h.Atom]]],''acc.Sort,'_>`[_`]>_['___['`{_`,_`}['`[_`,_`]['e.Atom,'g.Atom],'`[_`,_`]['e.Atom,
    'g.Atom]],'a.Atom,'`{_`,_`}['`[_`,_`]['f.Atom,'h.Atom],'`[_`,_`]['f.Atom,'h.Atom]]],''c-down.Sort,'___['`{_`,_`}['`[_`,_`]['e.Atom,'g.Atom],'`[_`,_`]['e.Atom,'g.Atom,'g.Atom]],'a.Atom,
    '`{_`,_`}['`[_`,_`]['f.Atom,'h.Atom],'`[_`,_`]['f.Atom,'h.Atom]]]]]
	
,'_>`[_`]>_['`{_`,_`}['___['`[_`,_`]['e.Atom,'g.Atom],'a.Atom,'`[_`,_`]['f.Atom,'h.Atom]],'___['`[_`,_`]['e.Atom,
    'g.Atom],'a.Atom,'`[_`,_`]['f.Atom,'h.Atom]]],''acc.Sort,'_>`[_`]>_['___['`{_`,_`}['`[_`,_`]['e.Atom,'g.Atom],'`[_`,_`]['e.Atom,'g.Atom]],'a.Atom,'`{_`,_`}['`[_`,_`]['f.Atom,'h.Atom],
    '`[_`,_`]['f.Atom,'h.Atom]]],''c-down.Sort,'___['`{_`,_`}['`[_`,_`]['e.Atom,'g.Atom],'`[_`,_`]['e.Atom,'g.Atom]],'a.Atom,'`{_`,_`}['`[_`,_`]['f.Atom,'h.Atom],'`[_`,_`]['f.Atom,'f.Atom,
    'h.Atom]]]]]
	
,'_>`[_`]>_['`{_`,_`}['___['`[_`,_`]['e.Atom,'g.Atom],'a.Atom,'`[_`,_`]['f.Atom,'h.Atom]],'___['`[_`,_`]['e.Atom,'g.Atom],'a.Atom,'`[_`,_`]['f.Atom,'h.Atom]]],''acc.Sort,
    '_>`[_`]>_['___['`{_`,_`}['`[_`,_`]['e.Atom,'g.Atom],'`[_`,_`]['e.Atom,'g.Atom]],'a.Atom,'`{_`,_`}['`[_`,_`]['f.Atom,'h.Atom],'`[_`,_`]['f.Atom,'h.Atom]]],''c-down.Sort,'___['`{_`,_`}[
    '`[_`,_`]['e.Atom,'g.Atom],'`[_`,_`]['e.Atom,'g.Atom]],'a.Atom,'`{_`,_`}['`[_`,_`]['f.Atom,'h.Atom],'`[_`,_`]['f.Atom,'h.Atom,'h.Atom]]]]]
	
	
,nil




{[e,g] a [f,h],[e,g] a [f,h]} >['acc]> ({[e,g],[e,g]} a {[f,h],[f,h]})


{[e,g] a [f,h],[e,g] a [f,h]} >['acc]> ({[e,g],[e,g]} a {[f,h],[f,h]}) >['c-down]> ([{[e,g],[e,g]},{[e,g],[e,g]}] a {[f,h],[f,h]})


{[e,g] a [f,h],[e,g] a [f,h]} >['acc]> ({[e,g],[e,g]} a {[f,h],[f,h]}) >['c-up]> ([e,g] a {[f,h],[f,h]})
 
 
{[e,g] a [f,h],[e,g] a [f,h]} >['acc]> ({[e,g],[e,g]} a {[f,h],[f,h]}) >['m]> ([{e,e},{g,g}] a {[f,h],[f,h]})








													

	eq testit1( TrSt Tr , Trm1, Rle, Trm2, N, finalTrm ) =
			if metaXmatch(['SAM-Meta], getPr(Rle), Trm1, nil , 0, unbounded, N) =/= noMatch then
				if 	getTopFormula(
						replaceContext(getContext(metaXmatch(['SAM-Meta], getPr(Rle), Trm1, nil , 0, unbounded, N)),
										'_>`[_`]>_[extractBinding(getSubstitution(metaXmatch(['SAM-Meta], getPr(Rle), Trm1, nil , 0, unbounded, N))) ,
													upTerm(rulename(Rle)),
													substitute(getCo(Rle), getSubstitution(metaXmatch(['SAM-Meta], getPr(Rle), Trm1, nil , 0, unbounded, N)))]))
					== Trm2
				then
					testit2( Tr,
							replaceContext(getContext(metaXmatch(['SAM-Meta], getPr(Rle), Trm1, nil , 0, unbounded, N)),
										'_>`[_`]>_[extractBinding(getSubstitution(metaXmatch(['SAM-Meta], getPr(Rle), Trm1, nil , 0, unbounded, N))) ,
													upTerm(rulename(Rle)),
													substitute(getCo(Rle), getSubstitution(metaXmatch(['SAM-Meta], getPr(Rle), Trm1, nil , 0, unbounded, N)))]),
							finalTrm )
							
				else
					testit1( TrSt Tr , Trm1, Rle, Trm2, N + 1 , finalTrm )
				fi
			else
				getPr(Rle)
			fi .
	

	eq testit( TrSt Tr , Trm1, Rle, Trm2, N, finalTrm ) =
			if metaXmatch(['SAM-Meta], getPr(Rle), Trm1, nil , 0, unbounded, N) =/= noMatch then
				if 	getTopFormula(
						replaceContext(getContext(metaXmatch(['SAM-Meta], getPr(Rle), Trm1, nil , 0, unbounded, N)),
										'_>`[_`]>_[extractBinding(getSubstitution(metaXmatch(['SAM-Meta], getPr(Rle), Trm1, nil , 0, unbounded, N))) ,
													upTerm(rulename(Rle)),
													substitute(getCo(Rle), getSubstitution(metaXmatch(['SAM-Meta], getPr(Rle), Trm1, nil , 0, unbounded, N)))]))
					== Trm2
				then
					testit1( Tr,
							replaceContext(getContext(metaXmatch(['SAM-Meta], getPr(Rle), Trm1, nil , 0, unbounded, N)),
										'_>`[_`]>_[extractBinding(getSubstitution(metaXmatch(['SAM-Meta], getPr(Rle), Trm1, nil , 0, unbounded, N))) ,
													upTerm(rulename(Rle)),
													substitute(getCo(Rle), getSubstitution(metaXmatch(['SAM-Meta], getPr(Rle), Trm1, nil , 0, unbounded, N)))]),
							finalTrm )
							
				else
					testit( TrSt Tr , Trm1, Rle, Trm2, N + 1 , finalTrm )
				fi
			else
				'nah
			fi .
		
	op bn : Nat -> Term .
		
	eq testit ( Tr, finalTrm ) = error .
	eq testit ( Tr, Trm, finalTrm ) = error .
	

	op domatch : Term Qid Term Context Substitution -> Term .
	eq domatch( Trm1, Q, Trm2, Ctxt, V <- Trm3 ) = replaceContext( Ctxt,
																	'_>`[_`]>_[extractBinding(metaXmatch(['SAM-Meta], replaceContext(Ctxt,V), Trm1, V => Trm3, 0, unbounded, 0)),
																				upTerm(Q),
																				Trm3]) .
***(
	eq domatch( Trm1, Q, Trm2, Ctxt, Subst ) = replaceContext( Ctxt,
																'_>`[_`]>_[extractBinding(metaXmatch(['SAM-Meta], replaceContext(Ctxt,'S:Structure), Trm1, 'S:Structure => Trm2, 0, unbounded, 0)),
																			upTerm(Q),
																			Trm2] ) . )
    eq domatch( Trm1, Q, Trm2, Ctxt, Subst ) = replaceContext( Ctxt,
																'_>`[_`]>_[Trm1,
																			upTerm(Q),
																			Trm2] ) .













